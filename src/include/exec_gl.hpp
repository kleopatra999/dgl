#pragma once

 void EXEC_glNewList(char *commandbuf);
 void EXEC_glEndList(char *commandbuf);
 void EXEC_glCallList(char *commandbuf);
 void EXEC_glCallLists(char *commandbuf);
 void EXEC_glDeleteLists(char *commandbuf);
 void EXEC_glGenLists(char *commandbuf);
 void EXEC_glListBase(char *commandbuf);
 void EXEC_glBegin(char *commandbuf);
 void EXEC_glBitmap(char *commandbuf);
 void EXEC_glColor3b(char *commandbuf);
 void EXEC_glColor3bv(char *commandbuf);
 void EXEC_glColor3d(char *commandbuf);
 void EXEC_glColor3dv(char *commandbuf);
 void EXEC_glColor3f(char *commandbuf);
 void EXEC_glColor3fv(char *commandbuf);
 void EXEC_glColor3i(char *commandbuf);
 void EXEC_glColor3iv(char *commandbuf);
 void EXEC_glColor3s(char *commandbuf);
 void EXEC_glColor3sv(char *commandbuf);
 void EXEC_glColor3ub(char *commandbuf);
 void EXEC_glColor3ubv(char *commandbuf);
 void EXEC_glColor3ui(char *commandbuf);
 void EXEC_glColor3uiv(char *commandbuf);
 void EXEC_glColor3us(char *commandbuf);
 void EXEC_glColor3usv(char *commandbuf);
 void EXEC_glColor4b(char *commandbuf);
 void EXEC_glColor4bv(char *commandbuf);
 void EXEC_glColor4d(char *commandbuf);
 void EXEC_glColor4dv(char *commandbuf);
 void EXEC_glColor4f(char *commandbuf);
 void EXEC_glColor4fv(char *commandbuf);
 void EXEC_glColor4i(char *commandbuf);
 void EXEC_glColor4iv(char *commandbuf);
 void EXEC_glColor4s(char *commandbuf);
 void EXEC_glColor4sv(char *commandbuf);
 void EXEC_glColor4ub(char *commandbuf);
 void EXEC_glColor4ubv(char *commandbuf);
 void EXEC_glColor4ui(char *commandbuf);
 void EXEC_glColor4uiv(char *commandbuf);
 void EXEC_glColor4us(char *commandbuf);
 void EXEC_glColor4usv(char *commandbuf);
 void EXEC_glEdgeFlag(char *commandbuf);
 void EXEC_glEdgeFlagv(char *commandbuf);
 void EXEC_glEnd(char *commandbuf);
 void EXEC_glIndexd(char *commandbuf);
 void EXEC_glIndexdv(char *commandbuf);
 void EXEC_glIndexf(char *commandbuf);
 void EXEC_glIndexfv(char *commandbuf);
 void EXEC_glIndexi(char *commandbuf);
 void EXEC_glIndexiv(char *commandbuf);
 void EXEC_glIndexs(char *commandbuf);
 void EXEC_glIndexsv(char *commandbuf);
 void EXEC_glNormal3b(char *commandbuf);
 void EXEC_glNormal3bv(char *commandbuf);
 void EXEC_glNormal3d(char *commandbuf);
 void EXEC_glNormal3dv(char *commandbuf);
 void EXEC_glNormal3f(char *commandbuf);
 void EXEC_glNormal3fv(char *commandbuf);
 void EXEC_glNormal3i(char *commandbuf);
 void EXEC_glNormal3iv(char *commandbuf);
 void EXEC_glNormal3s(char *commandbuf);
 void EXEC_glNormal3sv(char *commandbuf);
 void EXEC_glRasterPos2d(char *commandbuf);
 void EXEC_glRasterPos2dv(char *commandbuf);
 void EXEC_glRasterPos2f(char *commandbuf);
 void EXEC_glRasterPos2fv(char *commandbuf);
 void EXEC_glRasterPos2i(char *commandbuf);
 void EXEC_glRasterPos2iv(char *commandbuf);
 void EXEC_glRasterPos2s(char *commandbuf);
 void EXEC_glRasterPos2sv(char *commandbuf);
 void EXEC_glRasterPos3d(char *commandbuf);
 void EXEC_glRasterPos3dv(char *commandbuf);
 void EXEC_glRasterPos3f(char *commandbuf);
 void EXEC_glRasterPos3fv(char *commandbuf);
 void EXEC_glRasterPos3i(char *commandbuf);
 void EXEC_glRasterPos3iv(char *commandbuf);
 void EXEC_glRasterPos3s(char *commandbuf);
 void EXEC_glRasterPos3sv(char *commandbuf);
 void EXEC_glRasterPos4d(char *commandbuf);
 void EXEC_glRasterPos4dv(char *commandbuf);
 void EXEC_glRasterPos4f(char *commandbuf);
 void EXEC_glRasterPos4fv(char *commandbuf);
 void EXEC_glRasterPos4i(char *commandbuf);
 void EXEC_glRasterPos4iv(char *commandbuf);
 void EXEC_glRasterPos4s(char *commandbuf);
 void EXEC_glRasterPos4sv(char *commandbuf);
 void EXEC_glRectd(char *commandbuf);
 void EXEC_glRectdv(char *commandbuf);
 void EXEC_glRectf(char *commandbuf);
 void EXEC_glRectfv(char *commandbuf);
 void EXEC_glRecti(char *commandbuf);
 void EXEC_glRectiv(char *commandbuf);
 void EXEC_glRects(char *commandbuf);
 void EXEC_glRectsv(char *commandbuf);
 void EXEC_glTexCoord1d(char *commandbuf);
 void EXEC_glTexCoord1dv(char *commandbuf);
 void EXEC_glTexCoord1f(char *commandbuf);
 void EXEC_glTexCoord1fv(char *commandbuf);
 void EXEC_glTexCoord1i(char *commandbuf);
 void EXEC_glTexCoord1iv(char *commandbuf);
 void EXEC_glTexCoord1s(char *commandbuf);
 void EXEC_glTexCoord1sv(char *commandbuf);
 void EXEC_glTexCoord2d(char *commandbuf);
 void EXEC_glTexCoord2dv(char *commandbuf);
 void EXEC_glTexCoord2f(char *commandbuf);
 void EXEC_glTexCoord2fv(char *commandbuf);
 void EXEC_glTexCoord2i(char *commandbuf);
 void EXEC_glTexCoord2iv(char *commandbuf);
 void EXEC_glTexCoord2s(char *commandbuf);
 void EXEC_glTexCoord2sv(char *commandbuf);
 void EXEC_glTexCoord3d(char *commandbuf);
 void EXEC_glTexCoord3dv(char *commandbuf);
 void EXEC_glTexCoord3f(char *commandbuf);
 void EXEC_glTexCoord3fv(char *commandbuf);
 void EXEC_glTexCoord3i(char *commandbuf);
 void EXEC_glTexCoord3iv(char *commandbuf);
 void EXEC_glTexCoord3s(char *commandbuf);
 void EXEC_glTexCoord3sv(char *commandbuf);
 void EXEC_glTexCoord4d(char *commandbuf);
 void EXEC_glTexCoord4dv(char *commandbuf);
 void EXEC_glTexCoord4f(char *commandbuf);
 void EXEC_glTexCoord4fv(char *commandbuf);
 void EXEC_glTexCoord4i(char *commandbuf);
 void EXEC_glTexCoord4iv(char *commandbuf);
 void EXEC_glTexCoord4s(char *commandbuf);
 void EXEC_glTexCoord4sv(char *commandbuf);
 void EXEC_glVertex2d(char *commandbuf);
 void EXEC_glVertex2dv(char *commandbuf);
 void EXEC_glVertex2f(char *commandbuf);
 void EXEC_glVertex2fv(char *commandbuf);
 void EXEC_glVertex2i(char *commandbuf);
 void EXEC_glVertex2iv(char *commandbuf);
 void EXEC_glVertex2s(char *commandbuf);
 void EXEC_glVertex2sv(char *commandbuf);
 void EXEC_glVertex3d(char *commandbuf);
 void EXEC_glVertex3dv(char *commandbuf);
 void EXEC_glVertex3f(char *commandbuf);
 void EXEC_glVertex3fv(char *commandbuf);
 void EXEC_glVertex3i(char *commandbuf);
 void EXEC_glVertex3iv(char *commandbuf);
 void EXEC_glVertex3s(char *commandbuf);
 void EXEC_glVertex3sv(char *commandbuf);
 void EXEC_glVertex4d(char *commandbuf);
 void EXEC_glVertex4dv(char *commandbuf);
 void EXEC_glVertex4f(char *commandbuf);
 void EXEC_glVertex4fv(char *commandbuf);
 void EXEC_glVertex4i(char *commandbuf);
 void EXEC_glVertex4iv(char *commandbuf);
 void EXEC_glVertex4s(char *commandbuf);
 void EXEC_glVertex4sv(char *commandbuf);
 void EXEC_glClipPlane(char *commandbuf);
 void EXEC_glColorMaterial(char *commandbuf);
 void EXEC_glCullFace(char *commandbuf);
 void EXEC_glFogf(char *commandbuf);
 void EXEC_glFogfv(char *commandbuf);
 void EXEC_glFogi(char *commandbuf);
 void EXEC_glFogiv(char *commandbuf);
 void EXEC_glFrontFace(char *commandbuf);
 void EXEC_glHint(char *commandbuf);
 void EXEC_glLightf(char *commandbuf);
 void EXEC_glLightfv(char *commandbuf);
 void EXEC_glLighti(char *commandbuf);
 void EXEC_glLightiv(char *commandbuf);
 void EXEC_glLightModelf(char *commandbuf);
 void EXEC_glLightModelfv(char *commandbuf);
 void EXEC_glLightModeli(char *commandbuf);
 void EXEC_glLightModeliv(char *commandbuf);
 void EXEC_glLineStipple(char *commandbuf);
 void EXEC_glLineWidth(char *commandbuf);
 void EXEC_glMaterialf(char *commandbuf);
 void EXEC_glMaterialfv(char *commandbuf);
 void EXEC_glMateriali(char *commandbuf);
 void EXEC_glMaterialiv(char *commandbuf);
 void EXEC_glPointSize(char *commandbuf);
 void EXEC_glPolygonMode(char *commandbuf);
 void EXEC_glPolygonStipple(char *commandbuf);
 void EXEC_glScissor(char *commandbuf);
 void EXEC_glShadeModel(char *commandbuf);
 void EXEC_glTexParameterf(char *commandbuf);
 void EXEC_glTexParameterfv(char *commandbuf);
 void EXEC_glTexParameteri(char *commandbuf);
 void EXEC_glTexParameteriv(char *commandbuf);
 void EXEC_glTexImage1D(char *commandbuf);
 void EXEC_glTexImage2D(char *commandbuf);
 void EXEC_glTexEnvf(char *commandbuf);
 void EXEC_glTexEnvfv(char *commandbuf);
 void EXEC_glTexEnvi(char *commandbuf);
 void EXEC_glTexEnviv(char *commandbuf);
 void EXEC_glTexGend(char *commandbuf);
 void EXEC_glTexGendv(char *commandbuf);
 void EXEC_glTexGenf(char *commandbuf);
 void EXEC_glTexGenfv(char *commandbuf);
 void EXEC_glTexGeni(char *commandbuf);
 void EXEC_glTexGeniv(char *commandbuf);
 void EXEC_glFeedbackBuffer(char *commandbuf);
 void EXEC_glSelectBuffer(char *commandbuf);
 void EXEC_glRenderMode(char *commandbuf);
 void EXEC_glInitNames(char *commandbuf);
 void EXEC_glLoadName(char *commandbuf);
 void EXEC_glPassThrough(char *commandbuf);
 void EXEC_glPopName(char *commandbuf);
 void EXEC_glPushName(char *commandbuf);
 void EXEC_glDrawBuffer(char *commandbuf);
 void EXEC_glClear(char *commandbuf);
 void EXEC_glClearAccum(char *commandbuf);
 void EXEC_glClearIndex(char *commandbuf);
 void EXEC_glClearColor(char *commandbuf);
 void EXEC_glClearStencil(char *commandbuf);
 void EXEC_glClearDepth(char *commandbuf);
 void EXEC_glStencilMask(char *commandbuf);
 void EXEC_glColorMask(char *commandbuf);
 void EXEC_glDepthMask(char *commandbuf);
 void EXEC_glIndexMask(char *commandbuf);
 void EXEC_glAccum(char *commandbuf);
 void EXEC_glDisable(char *commandbuf);
 void EXEC_glEnable(char *commandbuf);
 void EXEC_glFinish(char *commandbuf);
 void EXEC_glFlush(char *commandbuf);
 void EXEC_glPopAttrib(char *commandbuf);
 void EXEC_glPushAttrib(char *commandbuf);
 void EXEC_glMap1d(char *commandbuf);
 void EXEC_glMap1f(char *commandbuf);
 void EXEC_glMap2d(char *commandbuf);
 void EXEC_glMap2f(char *commandbuf);
 void EXEC_glMapGrid1d(char *commandbuf);
 void EXEC_glMapGrid1f(char *commandbuf);
 void EXEC_glMapGrid2d(char *commandbuf);
 void EXEC_glMapGrid2f(char *commandbuf);
 void EXEC_glEvalCoord1d(char *commandbuf);
 void EXEC_glEvalCoord1dv(char *commandbuf);
 void EXEC_glEvalCoord1f(char *commandbuf);
 void EXEC_glEvalCoord1fv(char *commandbuf);
 void EXEC_glEvalCoord2d(char *commandbuf);
 void EXEC_glEvalCoord2dv(char *commandbuf);
 void EXEC_glEvalCoord2f(char *commandbuf);
 void EXEC_glEvalCoord2fv(char *commandbuf);
 void EXEC_glEvalMesh1(char *commandbuf);
 void EXEC_glEvalPoint1(char *commandbuf);
 void EXEC_glEvalMesh2(char *commandbuf);
 void EXEC_glEvalPoint2(char *commandbuf);
 void EXEC_glAlphaFunc(char *commandbuf);
 void EXEC_glBlendFunc(char *commandbuf);
 void EXEC_glLogicOp(char *commandbuf);
 void EXEC_glStencilFunc(char *commandbuf);
 void EXEC_glStencilOp(char *commandbuf);
 void EXEC_glDepthFunc(char *commandbuf);
 void EXEC_glPixelZoom(char *commandbuf);
 void EXEC_glPixelTransferf(char *commandbuf);
 void EXEC_glPixelTransferi(char *commandbuf);
 void EXEC_glPixelStoref(char *commandbuf);
 void EXEC_glPixelStorei(char *commandbuf);
 void EXEC_glPixelMapfv(char *commandbuf);
 void EXEC_glPixelMapuiv(char *commandbuf);
 void EXEC_glPixelMapusv(char *commandbuf);
 void EXEC_glReadBuffer(char *commandbuf);
 void EXEC_glCopyPixels(char *commandbuf);
 void EXEC_glReadPixels(char *commandbuf);
 void EXEC_glDrawPixels(char *commandbuf);
 void EXEC_glGetBooleanv(char *commandbuf);
 void EXEC_glGetClipPlane(char *commandbuf);
 void EXEC_glGetDoublev(char *commandbuf);
 void EXEC_glGetError(char *commandbuf);
 void EXEC_glGetFloatv(char *commandbuf);
 void EXEC_glGetIntegerv(char *commandbuf);
 void EXEC_glGetLightfv(char *commandbuf);
 void EXEC_glGetLightiv(char *commandbuf);
 void EXEC_glGetMapdv(char *commandbuf);
 void EXEC_glGetMapfv(char *commandbuf);
 void EXEC_glGetMapiv(char *commandbuf);
 void EXEC_glGetMaterialfv(char *commandbuf);
 void EXEC_glGetMaterialiv(char *commandbuf);
 void EXEC_glGetPixelMapfv(char *commandbuf);
 void EXEC_glGetPixelMapuiv(char *commandbuf);
 void EXEC_glGetPixelMapusv(char *commandbuf);
 void EXEC_glGetPolygonStipple(char *commandbuf);
 void EXEC_glGetString(char *commandbuf);
 void EXEC_glGetTexEnvfv(char *commandbuf);
 void EXEC_glGetTexEnviv(char *commandbuf);
 void EXEC_glGetTexGendv(char *commandbuf);
 void EXEC_glGetTexGenfv(char *commandbuf);
 void EXEC_glGetTexGeniv(char *commandbuf);
 void EXEC_glGetTexImage(char *commandbuf);
 void EXEC_glGetTexParameterfv(char *commandbuf);
 void EXEC_glGetTexParameteriv(char *commandbuf);
 void EXEC_glGetTexLevelParameterfv(char *commandbuf);
 void EXEC_glGetTexLevelParameteriv(char *commandbuf);
 void EXEC_glIsEnabled(char *commandbuf);
 void EXEC_glIsList(char *commandbuf);
 void EXEC_glDepthRange(char *commandbuf);
 void EXEC_glFrustum(char *commandbuf);
 void EXEC_glLoadIdentity(char *commandbuf);
 void EXEC_glLoadMatrixf(char *commandbuf);
 void EXEC_glLoadMatrixd(char *commandbuf);
 void EXEC_glMatrixMode(char *commandbuf);
 void EXEC_glMultMatrixf(char *commandbuf);
 void EXEC_glMultMatrixd(char *commandbuf);
 void EXEC_glOrtho(char *commandbuf);
 void EXEC_glPopMatrix(char *commandbuf);
 void EXEC_glPushMatrix(char *commandbuf);
 void EXEC_glRotated(char *commandbuf);
 void EXEC_glRotatef(char *commandbuf);
 void EXEC_glScaled(char *commandbuf);
 void EXEC_glScalef(char *commandbuf);
 void EXEC_glTranslated(char *commandbuf);
 void EXEC_glTranslatef(char *commandbuf);
 void EXEC_glViewport(char *commandbuf);
 void EXEC_glArrayElement(char *commandbuf);
 void EXEC_glBindTexture(char *commandbuf);
 void EXEC_glDisableClientState(char *commandbuf);
 void EXEC_glDrawArrays(char *commandbuf);
 void EXEC_glDrawElements(char *commandbuf);
 void EXEC_glEdgeFlagPointer(char *commandbuf);
 void EXEC_glEnableClientState(char *commandbuf);
 void EXEC_glIndexPointer(char *commandbuf);
 void EXEC_glIndexub(char *commandbuf);
 void EXEC_glIndexubv(char *commandbuf);
 void EXEC_glInterleavedArrays(char *commandbuf);
 void EXEC_glNormalPointer(char *commandbuf);
 void EXEC_glPolygonOffset(char *commandbuf);
 void EXEC_glColorPointer(char *commandbuf);
		//LOG("EXEC glColorPointer(%d, %s, %d) - %d\n", *size, getGLParamName(*type), *stride, i);;
 void EXEC_glTexCoordPointer(char *commandbuf);
		//LOG("EXEC glTexCoordPointer(%d, %s, %d) - %d\n", *size, getGLParamName(*type), *stride, i);;
 void EXEC_glVertexPointer(char *commandbuf);
		//LOG("EXEC glVertexPointer(%d, %s, %d) - %d\n", *size, getGLParamName(*type), *stride, i);;
 void EXEC_glAreTexturesResident(char *commandbuf);
 void EXEC_glCopyTexImage1D(char *commandbuf);
 void EXEC_glCopyTexImage2D(char *commandbuf);
 void EXEC_glCopyTexSubImage1D(char *commandbuf);
 void EXEC_glCopyTexSubImage2D(char *commandbuf);
 void EXEC_glDeleteTextures(char *commandbuf);
 void EXEC_glGenTextures(char *commandbuf);
 void EXEC_glGetPointerv(char *commandbuf);
 void EXEC_glIsTexture(char *commandbuf);
 void EXEC_glPrioritizeTextures(char *commandbuf);
 void EXEC_glTexSubImage1D(char *commandbuf);
 void EXEC_glTexSubImage2D(char *commandbuf);
 void EXEC_glPopClientAttrib(char *commandbuf);
 void EXEC_glPushClientAttrib(char *commandbuf);
 void EXEC_glBlendColor(char *commandbuf);
 void EXEC_glBlendEquation(char *commandbuf);
 void EXEC_glDrawRangeElements(char *commandbuf);
 void EXEC_glColorTable(char *commandbuf);
 void EXEC_glColorTableParameterfv(char *commandbuf);
 void EXEC_glColorTableParameteriv(char *commandbuf);
 void EXEC_glCopyColorTable(char *commandbuf);
 void EXEC_glGetColorTable(char *commandbuf);
 void EXEC_glGetColorTableParameterfv(char *commandbuf);
 void EXEC_glGetColorTableParameteriv(char *commandbuf);
 void EXEC_glColorSubTable(char *commandbuf);
 void EXEC_glCopyColorSubTable(char *commandbuf);
 void EXEC_glConvolutionFilter1D(char *commandbuf);
 void EXEC_glConvolutionFilter2D(char *commandbuf);
 void EXEC_glConvolutionParameterf(char *commandbuf);
 void EXEC_glConvolutionParameterfv(char *commandbuf);
 void EXEC_glConvolutionParameteri(char *commandbuf);
 void EXEC_glConvolutionParameteriv(char *commandbuf);
 void EXEC_glCopyConvolutionFilter1D(char *commandbuf);
 void EXEC_glCopyConvolutionFilter2D(char *commandbuf);
 void EXEC_glGetConvolutionFilter(char *commandbuf);
 void EXEC_glGetConvolutionParameterfv(char *commandbuf);
 void EXEC_glGetConvolutionParameteriv(char *commandbuf);
 void EXEC_glGetSeparableFilter(char *commandbuf);
 void EXEC_glSeparableFilter2D(char *commandbuf);
 void EXEC_glGetHistogram(char *commandbuf);
 void EXEC_glGetHistogramParameterfv(char *commandbuf);
 void EXEC_glGetHistogramParameteriv(char *commandbuf);
 void EXEC_glGetMinmax(char *commandbuf);
 void EXEC_glGetMinmaxParameterfv(char *commandbuf);
 void EXEC_glGetMinmaxParameteriv(char *commandbuf);
 void EXEC_glHistogram(char *commandbuf);
 void EXEC_glMinmax(char *commandbuf);
 void EXEC_glResetHistogram(char *commandbuf);
 void EXEC_glResetMinmax(char *commandbuf);
 void EXEC_glTexImage3D(char *commandbuf);
 void EXEC_glTexSubImage3D(char *commandbuf);
 void EXEC_glCopyTexSubImage3D(char *commandbuf);
 void EXEC_glActiveTexture(char *commandbuf);
 void EXEC_glClientActiveTexture(char *commandbuf);
 void EXEC_glMultiTexCoord1d(char *commandbuf);
 void EXEC_glMultiTexCoord1dv(char *commandbuf);
 void EXEC_glMultiTexCoord1f(char *commandbuf);
 void EXEC_glMultiTexCoord1fv(char *commandbuf);
 void EXEC_glMultiTexCoord1i(char *commandbuf);
 void EXEC_glMultiTexCoord1iv(char *commandbuf);
 void EXEC_glMultiTexCoord1s(char *commandbuf);
 void EXEC_glMultiTexCoord1sv(char *commandbuf);
 void EXEC_glMultiTexCoord2d(char *commandbuf);
 void EXEC_glMultiTexCoord2dv(char *commandbuf);
 void EXEC_glMultiTexCoord2f(char *commandbuf);
 void EXEC_glMultiTexCoord2fv(char *commandbuf);
 void EXEC_glMultiTexCoord2i(char *commandbuf);
 void EXEC_glMultiTexCoord2iv(char *commandbuf);
 void EXEC_glMultiTexCoord2s(char *commandbuf);
 void EXEC_glMultiTexCoord2sv(char *commandbuf);
 void EXEC_glMultiTexCoord3d(char *commandbuf);
 void EXEC_glMultiTexCoord3dv(char *commandbuf);
 void EXEC_glMultiTexCoord3f(char *commandbuf);
 void EXEC_glMultiTexCoord3fv(char *commandbuf);
 void EXEC_glMultiTexCoord3i(char *commandbuf);
 void EXEC_glMultiTexCoord3iv(char *commandbuf);
 void EXEC_glMultiTexCoord3s(char *commandbuf);
 void EXEC_glMultiTexCoord3sv(char *commandbuf);
 void EXEC_glMultiTexCoord4d(char *commandbuf);
 void EXEC_glMultiTexCoord4dv(char *commandbuf);
 void EXEC_glMultiTexCoord4f(char *commandbuf);
 void EXEC_glMultiTexCoord4fv(char *commandbuf);
 void EXEC_glMultiTexCoord4i(char *commandbuf);
 void EXEC_glMultiTexCoord4iv(char *commandbuf);
 void EXEC_glMultiTexCoord4s(char *commandbuf);
 void EXEC_glMultiTexCoord4sv(char *commandbuf);
 void EXEC_glLoadTransposeMatrixf(char *commandbuf);
 void EXEC_glLoadTransposeMatrixd(char *commandbuf);
 void EXEC_glMultTransposeMatrixf(char *commandbuf);
 void EXEC_glMultTransposeMatrixd(char *commandbuf);
 void EXEC_glSampleCoverage(char *commandbuf);
 void EXEC_glCompressedTexImage3D(char *commandbuf);
 void EXEC_glCompressedTexImage2D(char *commandbuf);
 void EXEC_glCompressedTexImage1D(char *commandbuf);
 void EXEC_glCompressedTexSubImage3D(char *commandbuf);
 void EXEC_glCompressedTexSubImage2D(char *commandbuf);
 void EXEC_glCompressedTexSubImage1D(char *commandbuf);
 void EXEC_glGetCompressedTexImage(char *commandbuf);
 void EXEC_glBlendFuncSeparate(char *commandbuf);
 void EXEC_glFogCoordf(char *commandbuf);
 void EXEC_glFogCoordfv(char *commandbuf);
 void EXEC_glFogCoordd(char *commandbuf);
 void EXEC_glFogCoorddv(char *commandbuf);
 void EXEC_glFogCoordPointer(char *commandbuf);
 void EXEC_glMultiDrawArrays(char *commandbuf);
 void EXEC_glMultiDrawElements(char *commandbuf);
 void EXEC_glPointParameterf(char *commandbuf);
 void EXEC_glPointParameterfv(char *commandbuf);
 void EXEC_glPointParameteri(char *commandbuf);
 void EXEC_glPointParameteriv(char *commandbuf);
 void EXEC_glSecondaryColor3b(char *commandbuf);
 void EXEC_glSecondaryColor3bv(char *commandbuf);
 void EXEC_glSecondaryColor3d(char *commandbuf);
 void EXEC_glSecondaryColor3dv(char *commandbuf);
 void EXEC_glSecondaryColor3f(char *commandbuf);
 void EXEC_glSecondaryColor3fv(char *commandbuf);
 void EXEC_glSecondaryColor3i(char *commandbuf);
 void EXEC_glSecondaryColor3iv(char *commandbuf);
 void EXEC_glSecondaryColor3s(char *commandbuf);
 void EXEC_glSecondaryColor3sv(char *commandbuf);
 void EXEC_glSecondaryColor3ub(char *commandbuf);
 void EXEC_glSecondaryColor3ubv(char *commandbuf);
 void EXEC_glSecondaryColor3ui(char *commandbuf);
 void EXEC_glSecondaryColor3uiv(char *commandbuf);
 void EXEC_glSecondaryColor3us(char *commandbuf);
 void EXEC_glSecondaryColor3usv(char *commandbuf);
 void EXEC_glSecondaryColorPointer(char *commandbuf);
 void EXEC_glWindowPos2d(char *commandbuf);
 void EXEC_glWindowPos2dv(char *commandbuf);
 void EXEC_glWindowPos2f(char *commandbuf);
 void EXEC_glWindowPos2fv(char *commandbuf);
 void EXEC_glWindowPos2i(char *commandbuf);
 void EXEC_glWindowPos2iv(char *commandbuf);
 void EXEC_glWindowPos2s(char *commandbuf);
 void EXEC_glWindowPos2sv(char *commandbuf);
 void EXEC_glWindowPos3d(char *commandbuf);
 void EXEC_glWindowPos3dv(char *commandbuf);
 void EXEC_glWindowPos3f(char *commandbuf);
 void EXEC_glWindowPos3fv(char *commandbuf);
 void EXEC_glWindowPos3i(char *commandbuf);
 void EXEC_glWindowPos3iv(char *commandbuf);
 void EXEC_glWindowPos3s(char *commandbuf);
 void EXEC_glWindowPos3sv(char *commandbuf);
 void EXEC_glBindBuffer(char *commandbuf);
 void EXEC_glBufferData(char *commandbuf);
 void EXEC_glBufferSubData(char *commandbuf);
 void EXEC_glDeleteBuffers(char *commandbuf);
 void EXEC_glGenBuffers(char *commandbuf);
 void EXEC_glGetBufferParameteriv(char *commandbuf);
 void EXEC_glGetBufferPointerv(char *commandbuf);
 void EXEC_glGetBufferSubData(char *commandbuf);
 void EXEC_glIsBuffer(char *commandbuf);
 void EXEC_glMapBuffer(char *commandbuf);
 void EXEC_glUnmapBuffer(char *commandbuf);
 void EXEC_glGenQueries(char *commandbuf);
 void EXEC_glDeleteQueries(char *commandbuf);
 void EXEC_glIsQuery(char *commandbuf);
 void EXEC_glBeginQuery(char *commandbuf);
 void EXEC_glEndQuery(char *commandbuf);
 void EXEC_glGetQueryiv(char *commandbuf);
 void EXEC_glGetQueryObjectiv(char *commandbuf);
 void EXEC_glGetQueryObjectuiv(char *commandbuf);
 void EXEC_glBlendEquationSeparate(char *commandbuf);
 void EXEC_glDrawBuffers(char *commandbuf);
 void EXEC_glStencilFuncSeparate(char *commandbuf);
 void EXEC_glStencilOpSeparate(char *commandbuf);
 void EXEC_glStencilMaskSeparate(char *commandbuf);
 void EXEC_glAttachShader(char *commandbuf);
 void EXEC_glBindAttribLocation(char *commandbuf);
 void EXEC_glCompileShader(char *commandbuf);
 void EXEC_glCreateProgram(char *commandbuf);
 void EXEC_glCreateShader(char *commandbuf);
 void EXEC_glDeleteProgram(char *commandbuf);
 void EXEC_glDeleteShader(char *commandbuf);
 void EXEC_glDetachShader(char *commandbuf);
 void EXEC_glDisableVertexAttribArray(char *commandbuf);
 void EXEC_glEnableVertexAttribArray(char *commandbuf);
 void EXEC_glGetActiveAttrib(char *commandbuf);
 void EXEC_glGetActiveUniform(char *commandbuf);
 void EXEC_glGetAttachedShaders(char *commandbuf);
 void EXEC_glGetAttribLocation(char *commandbuf);
 void EXEC_glGetProgramiv(char *commandbuf);
 void EXEC_glGetProgramInfoLog(char *commandbuf);
 void EXEC_glGetShaderiv(char *commandbuf);
 void EXEC_glGetShaderInfoLog(char *commandbuf);
 void EXEC_glGetShaderSource(char *commandbuf);
 void EXEC_glGetUniformLocation(char *commandbuf);
 void EXEC_glGetUniformfv(char *commandbuf);
 void EXEC_glGetUniformiv(char *commandbuf);
 void EXEC_glGetVertexAttribdv(char *commandbuf);
 void EXEC_glGetVertexAttribfv(char *commandbuf);
 void EXEC_glGetVertexAttribiv(char *commandbuf);
 void EXEC_glGetVertexAttribPointerv(char *commandbuf);
 void EXEC_glIsProgram(char *commandbuf);
 void EXEC_glIsShader(char *commandbuf);
 void EXEC_glLinkProgram(char *commandbuf);
 void EXEC_glShaderSource(char *commandbuf);
 void EXEC_glUseProgram(char *commandbuf);
 void EXEC_glUniform1f(char *commandbuf);
 void EXEC_glUniform2f(char *commandbuf);
 void EXEC_glUniform3f(char *commandbuf);
 void EXEC_glUniform4f(char *commandbuf);
 void EXEC_glUniform1i(char *commandbuf);
 void EXEC_glUniform2i(char *commandbuf);
 void EXEC_glUniform3i(char *commandbuf);
 void EXEC_glUniform4i(char *commandbuf);
 void EXEC_glUniform1fv(char *commandbuf);
 void EXEC_glUniform2fv(char *commandbuf);
 void EXEC_glUniform3fv(char *commandbuf);
 void EXEC_glUniform4fv(char *commandbuf);
 void EXEC_glUniform1iv(char *commandbuf);
 void EXEC_glUniform2iv(char *commandbuf);
 void EXEC_glUniform3iv(char *commandbuf);
 void EXEC_glUniform4iv(char *commandbuf);
 void EXEC_glUniformMatrix2fv(char *commandbuf);
 void EXEC_glUniformMatrix3fv(char *commandbuf);
 void EXEC_glUniformMatrix4fv(char *commandbuf);
 void EXEC_glValidateProgram(char *commandbuf);
 void EXEC_glVertexAttrib1d(char *commandbuf);
 void EXEC_glVertexAttrib1dv(char *commandbuf);
 void EXEC_glVertexAttrib1f(char *commandbuf);
 void EXEC_glVertexAttrib1fv(char *commandbuf);
 void EXEC_glVertexAttrib1s(char *commandbuf);
 void EXEC_glVertexAttrib1sv(char *commandbuf);
 void EXEC_glVertexAttrib2d(char *commandbuf);
 void EXEC_glVertexAttrib2dv(char *commandbuf);
 void EXEC_glVertexAttrib2f(char *commandbuf);
 void EXEC_glVertexAttrib2fv(char *commandbuf);
 void EXEC_glVertexAttrib2s(char *commandbuf);
 void EXEC_glVertexAttrib2sv(char *commandbuf);
 void EXEC_glVertexAttrib3d(char *commandbuf);
 void EXEC_glVertexAttrib3dv(char *commandbuf);
 void EXEC_glVertexAttrib3f(char *commandbuf);
 void EXEC_glVertexAttrib3fv(char *commandbuf);
 void EXEC_glVertexAttrib3s(char *commandbuf);
 void EXEC_glVertexAttrib3sv(char *commandbuf);
 void EXEC_glVertexAttrib4Nbv(char *commandbuf);
 void EXEC_glVertexAttrib4Niv(char *commandbuf);
 void EXEC_glVertexAttrib4Nsv(char *commandbuf);
 void EXEC_glVertexAttrib4Nub(char *commandbuf);
 void EXEC_glVertexAttrib4Nubv(char *commandbuf);
 void EXEC_glVertexAttrib4Nuiv(char *commandbuf);
 void EXEC_glVertexAttrib4Nusv(char *commandbuf);
 void EXEC_glVertexAttrib4bv(char *commandbuf);
 void EXEC_glVertexAttrib4d(char *commandbuf);
 void EXEC_glVertexAttrib4dv(char *commandbuf);
 void EXEC_glVertexAttrib4f(char *commandbuf);
 void EXEC_glVertexAttrib4fv(char *commandbuf);
 void EXEC_glVertexAttrib4iv(char *commandbuf);
 void EXEC_glVertexAttrib4s(char *commandbuf);
 void EXEC_glVertexAttrib4sv(char *commandbuf);
 void EXEC_glVertexAttrib4ubv(char *commandbuf);
 void EXEC_glVertexAttrib4uiv(char *commandbuf);
 void EXEC_glVertexAttrib4usv(char *commandbuf);
 void EXEC_glVertexAttribPointer(char *commandbuf);
 void EXEC_glUniformMatrix2x3fv(char *commandbuf);
 void EXEC_glUniformMatrix3x2fv(char *commandbuf);
 void EXEC_glUniformMatrix2x4fv(char *commandbuf);
 void EXEC_glUniformMatrix4x2fv(char *commandbuf);
 void EXEC_glUniformMatrix3x4fv(char *commandbuf);
 void EXEC_glUniformMatrix4x3fv(char *commandbuf);
 void EXEC_glActiveTextureARB(char *commandbuf);
 void EXEC_glClientActiveTextureARB(char *commandbuf);
 void EXEC_glMultiTexCoord1dARB(char *commandbuf);
 void EXEC_glMultiTexCoord1dvARB(char *commandbuf);
 void EXEC_glMultiTexCoord1fARB(char *commandbuf);
 void EXEC_glMultiTexCoord1fvARB(char *commandbuf);
 void EXEC_glMultiTexCoord1iARB(char *commandbuf);
 void EXEC_glMultiTexCoord1ivARB(char *commandbuf);
 void EXEC_glMultiTexCoord1sARB(char *commandbuf);
 void EXEC_glMultiTexCoord1svARB(char *commandbuf);
 void EXEC_glMultiTexCoord2dARB(char *commandbuf);
 void EXEC_glMultiTexCoord2dvARB(char *commandbuf);
 void EXEC_glMultiTexCoord2fARB(char *commandbuf);
 void EXEC_glMultiTexCoord2fvARB(char *commandbuf);
 void EXEC_glMultiTexCoord2iARB(char *commandbuf);
 void EXEC_glMultiTexCoord2ivARB(char *commandbuf);
 void EXEC_glMultiTexCoord2sARB(char *commandbuf);
 void EXEC_glMultiTexCoord2svARB(char *commandbuf);
 void EXEC_glMultiTexCoord3dARB(char *commandbuf);
 void EXEC_glMultiTexCoord3dvARB(char *commandbuf);
 void EXEC_glMultiTexCoord3fARB(char *commandbuf);
 void EXEC_glMultiTexCoord3fvARB(char *commandbuf);
 void EXEC_glMultiTexCoord3iARB(char *commandbuf);
 void EXEC_glMultiTexCoord3ivARB(char *commandbuf);
 void EXEC_glMultiTexCoord3sARB(char *commandbuf);
 void EXEC_glMultiTexCoord3svARB(char *commandbuf);
 void EXEC_glMultiTexCoord4dARB(char *commandbuf);
 void EXEC_glMultiTexCoord4dvARB(char *commandbuf);
 void EXEC_glMultiTexCoord4fARB(char *commandbuf);
 void EXEC_glMultiTexCoord4fvARB(char *commandbuf);
 void EXEC_glMultiTexCoord4iARB(char *commandbuf);
 void EXEC_glMultiTexCoord4ivARB(char *commandbuf);
 void EXEC_glMultiTexCoord4sARB(char *commandbuf);
 void EXEC_glMultiTexCoord4svARB(char *commandbuf);
 void EXEC_glLoadTransposeMatrixfARB(char *commandbuf);
 void EXEC_glLoadTransposeMatrixdARB(char *commandbuf);
 void EXEC_glMultTransposeMatrixfARB(char *commandbuf);
 void EXEC_glMultTransposeMatrixdARB(char *commandbuf);
 void EXEC_glSampleCoverageARB(char *commandbuf);
 void EXEC_glCompressedTexImage3DARB(char *commandbuf);
 void EXEC_glCompressedTexImage2DARB(char *commandbuf);
 void EXEC_glCompressedTexImage1DARB(char *commandbuf);
 void EXEC_glCompressedTexSubImage3DARB(char *commandbuf);
 void EXEC_glCompressedTexSubImage2DARB(char *commandbuf);
 void EXEC_glCompressedTexSubImage1DARB(char *commandbuf);
 void EXEC_glGetCompressedTexImageARB(char *commandbuf);
 void EXEC_glPointParameterfARB(char *commandbuf);
 void EXEC_glPointParameterfvARB(char *commandbuf);
 void EXEC_glWeightbvARB(char *commandbuf);
 void EXEC_glWeightsvARB(char *commandbuf);
 void EXEC_glWeightivARB(char *commandbuf);
 void EXEC_glWeightfvARB(char *commandbuf);
 void EXEC_glWeightdvARB(char *commandbuf);
 void EXEC_glWeightubvARB(char *commandbuf);
 void EXEC_glWeightusvARB(char *commandbuf);
 void EXEC_glWeightuivARB(char *commandbuf);
 void EXEC_glWeightPointerARB(char *commandbuf);
 void EXEC_glVertexBlendARB(char *commandbuf);
 void EXEC_glCurrentPaletteMatrixARB(char *commandbuf);
 void EXEC_glMatrixIndexubvARB(char *commandbuf);
 void EXEC_glMatrixIndexusvARB(char *commandbuf);
 void EXEC_glMatrixIndexuivARB(char *commandbuf);
 void EXEC_glMatrixIndexPointerARB(char *commandbuf);
 void EXEC_glWindowPos2dARB(char *commandbuf);
 void EXEC_glWindowPos2fARB(char *commandbuf);
 void EXEC_glWindowPos2iARB(char *commandbuf);
 void EXEC_glWindowPos2sARB(char *commandbuf);
 void EXEC_glWindowPos2dvARB(char *commandbuf);
 void EXEC_glWindowPos2fvARB(char *commandbuf);
 void EXEC_glWindowPos2ivARB(char *commandbuf);
 void EXEC_glWindowPos2svARB(char *commandbuf);
 void EXEC_glWindowPos3dARB(char *commandbuf);
 void EXEC_glWindowPos3fARB(char *commandbuf);
 void EXEC_glWindowPos3iARB(char *commandbuf);
 void EXEC_glWindowPos3sARB(char *commandbuf);
 void EXEC_glWindowPos3dvARB(char *commandbuf);
 void EXEC_glWindowPos3fvARB(char *commandbuf);
 void EXEC_glWindowPos3ivARB(char *commandbuf);
 void EXEC_glWindowPos3svARB(char *commandbuf);
 void EXEC_glGetVertexAttribdvARB(char *commandbuf);
 void EXEC_glGetVertexAttribfvARB(char *commandbuf);
 void EXEC_glGetVertexAttribivARB(char *commandbuf);
 void EXEC_glVertexAttrib1dARB(char *commandbuf);
 void EXEC_glVertexAttrib1dvARB(char *commandbuf);
 void EXEC_glVertexAttrib1fARB(char *commandbuf);
 void EXEC_glVertexAttrib1fvARB(char *commandbuf);
 void EXEC_glVertexAttrib1sARB(char *commandbuf);
 void EXEC_glVertexAttrib1svARB(char *commandbuf);
 void EXEC_glVertexAttrib2dARB(char *commandbuf);
 void EXEC_glVertexAttrib2dvARB(char *commandbuf);
 void EXEC_glVertexAttrib2fARB(char *commandbuf);
 void EXEC_glVertexAttrib2fvARB(char *commandbuf);
 void EXEC_glVertexAttrib2sARB(char *commandbuf);
 void EXEC_glVertexAttrib2svARB(char *commandbuf);
 void EXEC_glVertexAttrib3dARB(char *commandbuf);
 void EXEC_glVertexAttrib3dvARB(char *commandbuf);
 void EXEC_glVertexAttrib3fARB(char *commandbuf);
 void EXEC_glVertexAttrib3fvARB(char *commandbuf);
 void EXEC_glVertexAttrib3sARB(char *commandbuf);
 void EXEC_glVertexAttrib3svARB(char *commandbuf);
 void EXEC_glVertexAttrib4dARB(char *commandbuf);
 void EXEC_glVertexAttrib4dvARB(char *commandbuf);
 void EXEC_glVertexAttrib4fARB(char *commandbuf);
 void EXEC_glVertexAttrib4fvARB(char *commandbuf);
 void EXEC_glVertexAttrib4sARB(char *commandbuf);
 void EXEC_glVertexAttrib4svARB(char *commandbuf);
 void EXEC_glVertexAttrib4NubARB(char *commandbuf);
 void EXEC_glVertexAttrib4NubvARB(char *commandbuf);
 void EXEC_glVertexAttrib4bvARB(char *commandbuf);
 void EXEC_glVertexAttrib4ivARB(char *commandbuf);
 void EXEC_glVertexAttrib4ubvARB(char *commandbuf);
 void EXEC_glVertexAttrib4usvARB(char *commandbuf);
 void EXEC_glVertexAttrib4uivARB(char *commandbuf);
 void EXEC_glVertexAttrib4NbvARB(char *commandbuf);
 void EXEC_glVertexAttrib4NsvARB(char *commandbuf);
 void EXEC_glVertexAttrib4NivARB(char *commandbuf);
 void EXEC_glVertexAttrib4NusvARB(char *commandbuf);
 void EXEC_glVertexAttrib4NuivARB(char *commandbuf);
 void EXEC_glVertexAttribPointerARB(char *commandbuf);
 void EXEC_glEnableVertexAttribArrayARB(char *commandbuf);
 void EXEC_glDisableVertexAttribArrayARB(char *commandbuf);
 void EXEC_glProgramStringARB(char *commandbuf);
 void EXEC_glBindProgramARB(char *commandbuf);
 void EXEC_glDeleteProgramsARB(char *commandbuf);
 void EXEC_glGenProgramsARB(char *commandbuf);
 void EXEC_glIsProgramARB(char *commandbuf);
 void EXEC_glProgramEnvParameter4dARB(char *commandbuf);
 void EXEC_glProgramEnvParameter4dvARB(char *commandbuf);
 void EXEC_glProgramEnvParameter4fARB(char *commandbuf);
 void EXEC_glProgramEnvParameter4fvARB(char *commandbuf);
 void EXEC_glProgramLocalParameter4dARB(char *commandbuf);
 void EXEC_glProgramLocalParameter4dvARB(char *commandbuf);
 void EXEC_glProgramLocalParameter4fARB(char *commandbuf);
 void EXEC_glProgramLocalParameter4fvARB(char *commandbuf);
 void EXEC_glGetProgramEnvParameterdvARB(char *commandbuf);
 void EXEC_glGetProgramEnvParameterfvARB(char *commandbuf);
 void EXEC_glGetProgramLocalParameterdvARB(char *commandbuf);
 void EXEC_glGetProgramLocalParameterfvARB(char *commandbuf);
 void EXEC_glGetProgramivARB(char *commandbuf);
 void EXEC_glGetProgramStringARB(char *commandbuf);
 void EXEC_glGetVertexAttribPointervARB(char *commandbuf);
 void EXEC_glBindBufferARB(char *commandbuf);
 void EXEC_glBufferDataARB(char *commandbuf);
 void EXEC_glBufferSubDataARB(char *commandbuf);
 void EXEC_glDeleteBuffersARB(char *commandbuf);
 void EXEC_glGenBuffersARB(char *commandbuf);
 void EXEC_glGetBufferParameterivARB(char *commandbuf);
 void EXEC_glGetBufferPointervARB(char *commandbuf);
 void EXEC_glGetBufferSubDataARB(char *commandbuf);
 void EXEC_glIsBufferARB(char *commandbuf);
 void EXEC_glMapBufferARB(char *commandbuf);
 void EXEC_glUnmapBufferARB(char *commandbuf);
 void EXEC_glGenQueriesARB(char *commandbuf);
 void EXEC_glDeleteQueriesARB(char *commandbuf);
 void EXEC_glIsQueryARB(char *commandbuf);
 void EXEC_glBeginQueryARB(char *commandbuf);
 void EXEC_glEndQueryARB(char *commandbuf);
 void EXEC_glGetQueryivARB(char *commandbuf);
 void EXEC_glGetQueryObjectivARB(char *commandbuf);
 void EXEC_glGetQueryObjectuivARB(char *commandbuf);
 void EXEC_glDeleteObjectARB(char *commandbuf);
 void EXEC_glGetHandleARB(char *commandbuf);
 void EXEC_glDetachObjectARB(char *commandbuf);
 void EXEC_glCreateShaderObjectARB(char *commandbuf);
 void EXEC_glShaderSourceARB(char *commandbuf);
 void EXEC_glCompileShaderARB(char *commandbuf);
 void EXEC_glCreateProgramObjectARB(char *commandbuf);
 void EXEC_glAttachObjectARB(char *commandbuf);
 void EXEC_glLinkProgramARB(char *commandbuf);
 void EXEC_glUseProgramObjectARB(char *commandbuf);
 void EXEC_glValidateProgramARB(char *commandbuf);
 void EXEC_glUniform1fARB(char *commandbuf);
 void EXEC_glUniform2fARB(char *commandbuf);
 void EXEC_glUniform3fARB(char *commandbuf);
 void EXEC_glUniform4fARB(char *commandbuf);
 void EXEC_glUniform1iARB(char *commandbuf);
 void EXEC_glUniform2iARB(char *commandbuf);
 void EXEC_glUniform3iARB(char *commandbuf);
 void EXEC_glUniform4iARB(char *commandbuf);
 void EXEC_glUniform1fvARB(char *commandbuf);
 void EXEC_glUniform2fvARB(char *commandbuf);
 void EXEC_glUniform3fvARB(char *commandbuf);
 void EXEC_glUniform4fvARB(char *commandbuf);
 void EXEC_glUniform1ivARB(char *commandbuf);
 void EXEC_glUniform2ivARB(char *commandbuf);
 void EXEC_glUniform3ivARB(char *commandbuf);
 void EXEC_glUniform4ivARB(char *commandbuf);
 void EXEC_glUniformMatrix2fvARB(char *commandbuf);
 void EXEC_glUniformMatrix3fvARB(char *commandbuf);
 void EXEC_glUniformMatrix4fvARB(char *commandbuf);
 void EXEC_glGetObjectParameterfvARB(char *commandbuf);
 void EXEC_glGetObjectParameterivARB(char *commandbuf);
 void EXEC_glGetInfoLogARB(char *commandbuf);
 void EXEC_glGetAttachedObjectsARB(char *commandbuf);
 void EXEC_glGetUniformLocationARB(char *commandbuf);
 void EXEC_glGetActiveUniformARB(char *commandbuf);
 void EXEC_glGetUniformfvARB(char *commandbuf);
 void EXEC_glGetUniformivARB(char *commandbuf);
 void EXEC_glGetShaderSourceARB(char *commandbuf);
 void EXEC_glBindAttribLocationARB(char *commandbuf);
 void EXEC_glGetActiveAttribARB(char *commandbuf);
 void EXEC_glGetAttribLocationARB(char *commandbuf);
 void EXEC_glDrawBuffersARB(char *commandbuf);
 void EXEC_glBlendColorEXT(char *commandbuf);
 void EXEC_glPolygonOffsetEXT(char *commandbuf);
 void EXEC_glTexImage3DEXT(char *commandbuf);
 void EXEC_glTexSubImage3DEXT(char *commandbuf);
 void EXEC_glGetTexFilterFuncSGIS(char *commandbuf);
 void EXEC_glTexFilterFuncSGIS(char *commandbuf);
 void EXEC_glTexSubImage1DEXT(char *commandbuf);
 void EXEC_glTexSubImage2DEXT(char *commandbuf);
 void EXEC_glCopyTexImage1DEXT(char *commandbuf);
 void EXEC_glCopyTexImage2DEXT(char *commandbuf);
 void EXEC_glCopyTexSubImage1DEXT(char *commandbuf);
 void EXEC_glCopyTexSubImage2DEXT(char *commandbuf);
 void EXEC_glCopyTexSubImage3DEXT(char *commandbuf);
 void EXEC_glGetHistogramEXT(char *commandbuf);
 void EXEC_glGetHistogramParameterfvEXT(char *commandbuf);
 void EXEC_glGetHistogramParameterivEXT(char *commandbuf);
 void EXEC_glGetMinmaxEXT(char *commandbuf);
 void EXEC_glGetMinmaxParameterfvEXT(char *commandbuf);
 void EXEC_glGetMinmaxParameterivEXT(char *commandbuf);
 void EXEC_glHistogramEXT(char *commandbuf);
 void EXEC_glMinmaxEXT(char *commandbuf);
 void EXEC_glResetHistogramEXT(char *commandbuf);
 void EXEC_glResetMinmaxEXT(char *commandbuf);
 void EXEC_glConvolutionFilter1DEXT(char *commandbuf);
 void EXEC_glConvolutionFilter2DEXT(char *commandbuf);
 void EXEC_glConvolutionParameterfEXT(char *commandbuf);
 void EXEC_glConvolutionParameterfvEXT(char *commandbuf);
 void EXEC_glConvolutionParameteriEXT(char *commandbuf);
 void EXEC_glConvolutionParameterivEXT(char *commandbuf);
 void EXEC_glCopyConvolutionFilter1DEXT(char *commandbuf);
 void EXEC_glCopyConvolutionFilter2DEXT(char *commandbuf);
 void EXEC_glGetConvolutionFilterEXT(char *commandbuf);
 void EXEC_glGetConvolutionParameterfvEXT(char *commandbuf);
 void EXEC_glGetConvolutionParameterivEXT(char *commandbuf);
 void EXEC_glGetSeparableFilterEXT(char *commandbuf);
 void EXEC_glSeparableFilter2DEXT(char *commandbuf);
 void EXEC_glColorTableSGI(char *commandbuf);
 void EXEC_glColorTableParameterfvSGI(char *commandbuf);
 void EXEC_glColorTableParameterivSGI(char *commandbuf);
 void EXEC_glCopyColorTableSGI(char *commandbuf);
 void EXEC_glGetColorTableSGI(char *commandbuf);
 void EXEC_glGetColorTableParameterfvSGI(char *commandbuf);
 void EXEC_glGetColorTableParameterivSGI(char *commandbuf);
 void EXEC_glPixelTexGenParameteriSGIS(char *commandbuf);
 void EXEC_glPixelTexGenParameterivSGIS(char *commandbuf);
 void EXEC_glPixelTexGenParameterfSGIS(char *commandbuf);
 void EXEC_glPixelTexGenParameterfvSGIS(char *commandbuf);
 void EXEC_glGetPixelTexGenParameterivSGIS(char *commandbuf);
 void EXEC_glGetPixelTexGenParameterfvSGIS(char *commandbuf);
 void EXEC_glTexImage4DSGIS(char *commandbuf);
 void EXEC_glTexSubImage4DSGIS(char *commandbuf);
 void EXEC_glAreTexturesResidentEXT(char *commandbuf);
 void EXEC_glBindTextureEXT(char *commandbuf);
 void EXEC_glDeleteTexturesEXT(char *commandbuf);
 void EXEC_glGenTexturesEXT(char *commandbuf);
 void EXEC_glIsTextureEXT(char *commandbuf);
 void EXEC_glPrioritizeTexturesEXT(char *commandbuf);
 void EXEC_glDetailTexFuncSGIS(char *commandbuf);
 void EXEC_glGetDetailTexFuncSGIS(char *commandbuf);
 void EXEC_glSharpenTexFuncSGIS(char *commandbuf);
 void EXEC_glGetSharpenTexFuncSGIS(char *commandbuf);
 void EXEC_glSampleMaskSGIS(char *commandbuf);
 void EXEC_glSamplePatternSGIS(char *commandbuf);
 void EXEC_glArrayElementEXT(char *commandbuf);
 void EXEC_glColorPointerEXT(char *commandbuf);
 void EXEC_glDrawArraysEXT(char *commandbuf);
 void EXEC_glEdgeFlagPointerEXT(char *commandbuf);
 void EXEC_glGetPointervEXT(char *commandbuf);
 void EXEC_glIndexPointerEXT(char *commandbuf);
 void EXEC_glNormalPointerEXT(char *commandbuf);
 void EXEC_glTexCoordPointerEXT(char *commandbuf);
 void EXEC_glVertexPointerEXT(char *commandbuf);
 void EXEC_glBlendEquationEXT(char *commandbuf);
 void EXEC_glSpriteParameterfSGIX(char *commandbuf);
 void EXEC_glSpriteParameterfvSGIX(char *commandbuf);
 void EXEC_glSpriteParameteriSGIX(char *commandbuf);
 void EXEC_glSpriteParameterivSGIX(char *commandbuf);
 void EXEC_glPointParameterfEXT(char *commandbuf);
 void EXEC_glPointParameterfvEXT(char *commandbuf);
 void EXEC_glGetInstrumentsSGIX(char *commandbuf);
 void EXEC_glInstrumentsBufferSGIX(char *commandbuf);
 void EXEC_glPollInstrumentsSGIX(char *commandbuf);
 void EXEC_glReadInstrumentsSGIX(char *commandbuf);
 void EXEC_glStartInstrumentsSGIX(char *commandbuf);
 void EXEC_glStopInstrumentsSGIX(char *commandbuf);
 void EXEC_glFrameZoomSGIX(char *commandbuf);
 void EXEC_glTagSampleBufferSGIX(char *commandbuf);
 void EXEC_glReferencePlaneSGIX(char *commandbuf);
 void EXEC_glFlushRasterSGIX(char *commandbuf);
 void EXEC_glFogFuncSGIS(char *commandbuf);
 void EXEC_glGetFogFuncSGIS(char *commandbuf);
 void EXEC_glImageTransformParameteriHP(char *commandbuf);
 void EXEC_glImageTransformParameterfHP(char *commandbuf);
 void EXEC_glImageTransformParameterivHP(char *commandbuf);
 void EXEC_glImageTransformParameterfvHP(char *commandbuf);
 void EXEC_glGetImageTransformParameterivHP(char *commandbuf);
 void EXEC_glGetImageTransformParameterfvHP(char *commandbuf);
 void EXEC_glColorSubTableEXT(char *commandbuf);
 void EXEC_glCopyColorSubTableEXT(char *commandbuf);
 void EXEC_glHintPGI(char *commandbuf);
 void EXEC_glColorTableEXT(char *commandbuf);
 void EXEC_glGetColorTableEXT(char *commandbuf);
 void EXEC_glGetColorTableParameterivEXT(char *commandbuf);
 void EXEC_glGetColorTableParameterfvEXT(char *commandbuf);
 void EXEC_glGetListParameterfvSGIX(char *commandbuf);
 void EXEC_glGetListParameterivSGIX(char *commandbuf);
 void EXEC_glListParameterfSGIX(char *commandbuf);
 void EXEC_glListParameterfvSGIX(char *commandbuf);
 void EXEC_glListParameteriSGIX(char *commandbuf);
 void EXEC_glListParameterivSGIX(char *commandbuf);
 void EXEC_glIndexMaterialEXT(char *commandbuf);
 void EXEC_glIndexFuncEXT(char *commandbuf);
 void EXEC_glLockArraysEXT(char *commandbuf);
 void EXEC_glUnlockArraysEXT(char *commandbuf);
 void EXEC_glCullParameterdvEXT(char *commandbuf);
 void EXEC_glCullParameterfvEXT(char *commandbuf);
 void EXEC_glFragmentColorMaterialSGIX(char *commandbuf);
 void EXEC_glFragmentLightfSGIX(char *commandbuf);
 void EXEC_glFragmentLightfvSGIX(char *commandbuf);
 void EXEC_glFragmentLightiSGIX(char *commandbuf);
 void EXEC_glFragmentLightivSGIX(char *commandbuf);
 void EXEC_glFragmentLightModelfSGIX(char *commandbuf);
 void EXEC_glFragmentLightModelfvSGIX(char *commandbuf);
 void EXEC_glFragmentLightModeliSGIX(char *commandbuf);
 void EXEC_glFragmentLightModelivSGIX(char *commandbuf);
 void EXEC_glFragmentMaterialfSGIX(char *commandbuf);
 void EXEC_glFragmentMaterialfvSGIX(char *commandbuf);
 void EXEC_glFragmentMaterialiSGIX(char *commandbuf);
 void EXEC_glFragmentMaterialivSGIX(char *commandbuf);
 void EXEC_glGetFragmentLightfvSGIX(char *commandbuf);
 void EXEC_glGetFragmentLightivSGIX(char *commandbuf);
 void EXEC_glGetFragmentMaterialfvSGIX(char *commandbuf);
 void EXEC_glGetFragmentMaterialivSGIX(char *commandbuf);
 void EXEC_glLightEnviSGIX(char *commandbuf);
 void EXEC_glDrawRangeElementsEXT(char *commandbuf);
 void EXEC_glApplyTextureEXT(char *commandbuf);
 void EXEC_glTextureLightEXT(char *commandbuf);
 void EXEC_glTextureMaterialEXT(char *commandbuf);
 void EXEC_glAsyncMarkerSGIX(char *commandbuf);
 void EXEC_glFinishAsyncSGIX(char *commandbuf);
 void EXEC_glPollAsyncSGIX(char *commandbuf);
 void EXEC_glGenAsyncMarkersSGIX(char *commandbuf);
 void EXEC_glDeleteAsyncMarkersSGIX(char *commandbuf);
 void EXEC_glIsAsyncMarkerSGIX(char *commandbuf);
 void EXEC_glVertexPointervINTEL(char *commandbuf);
 void EXEC_glNormalPointervINTEL(char *commandbuf);
 void EXEC_glColorPointervINTEL(char *commandbuf);
 void EXEC_glTexCoordPointervINTEL(char *commandbuf);
 void EXEC_glPixelTransformParameteriEXT(char *commandbuf);
 void EXEC_glPixelTransformParameterfEXT(char *commandbuf);
 void EXEC_glPixelTransformParameterivEXT(char *commandbuf);
 void EXEC_glPixelTransformParameterfvEXT(char *commandbuf);
 void EXEC_glSecondaryColor3bEXT(char *commandbuf);
 void EXEC_glSecondaryColor3bvEXT(char *commandbuf);
 void EXEC_glSecondaryColor3dEXT(char *commandbuf);
 void EXEC_glSecondaryColor3dvEXT(char *commandbuf);
 void EXEC_glSecondaryColor3fEXT(char *commandbuf);
 void EXEC_glSecondaryColor3fvEXT(char *commandbuf);
 void EXEC_glSecondaryColor3iEXT(char *commandbuf);
 void EXEC_glSecondaryColor3ivEXT(char *commandbuf);
 void EXEC_glSecondaryColor3sEXT(char *commandbuf);
 void EXEC_glSecondaryColor3svEXT(char *commandbuf);
 void EXEC_glSecondaryColor3ubEXT(char *commandbuf);
 void EXEC_glSecondaryColor3ubvEXT(char *commandbuf);
 void EXEC_glSecondaryColor3uiEXT(char *commandbuf);
 void EXEC_glSecondaryColor3uivEXT(char *commandbuf);
 void EXEC_glSecondaryColor3usEXT(char *commandbuf);
 void EXEC_glSecondaryColor3usvEXT(char *commandbuf);
 void EXEC_glSecondaryColorPointerEXT(char *commandbuf);
 void EXEC_glTextureNormalEXT(char *commandbuf);
 void EXEC_glMultiDrawArraysEXT(char *commandbuf);
 void EXEC_glMultiDrawElementsEXT(char *commandbuf);
 void EXEC_glFogCoordfEXT(char *commandbuf);
 void EXEC_glFogCoordfvEXT(char *commandbuf);
 void EXEC_glFogCoorddEXT(char *commandbuf);
 void EXEC_glFogCoorddvEXT(char *commandbuf);
 void EXEC_glFogCoordPointerEXT(char *commandbuf);
 void EXEC_glTangent3bEXT(char *commandbuf);
 void EXEC_glTangent3bvEXT(char *commandbuf);
 void EXEC_glTangent3dEXT(char *commandbuf);
 void EXEC_glTangent3dvEXT(char *commandbuf);
 void EXEC_glTangent3fEXT(char *commandbuf);
 void EXEC_glTangent3fvEXT(char *commandbuf);
 void EXEC_glTangent3iEXT(char *commandbuf);
 void EXEC_glTangent3ivEXT(char *commandbuf);
 void EXEC_glTangent3sEXT(char *commandbuf);
 void EXEC_glTangent3svEXT(char *commandbuf);
 void EXEC_glBinormal3bEXT(char *commandbuf);
 void EXEC_glBinormal3bvEXT(char *commandbuf);
 void EXEC_glBinormal3dEXT(char *commandbuf);
 void EXEC_glBinormal3dvEXT(char *commandbuf);
 void EXEC_glBinormal3fEXT(char *commandbuf);
 void EXEC_glBinormal3fvEXT(char *commandbuf);
 void EXEC_glBinormal3iEXT(char *commandbuf);
 void EXEC_glBinormal3ivEXT(char *commandbuf);
 void EXEC_glBinormal3sEXT(char *commandbuf);
 void EXEC_glBinormal3svEXT(char *commandbuf);
 void EXEC_glTangentPointerEXT(char *commandbuf);
 void EXEC_glBinormalPointerEXT(char *commandbuf);
 void EXEC_glPixelTexGenSGIX(char *commandbuf);
 void EXEC_glFinishTextureSUNX(char *commandbuf);
 void EXEC_glGlobalAlphaFactorbSUN(char *commandbuf);
 void EXEC_glGlobalAlphaFactorsSUN(char *commandbuf);
 void EXEC_glGlobalAlphaFactoriSUN(char *commandbuf);
 void EXEC_glGlobalAlphaFactorfSUN(char *commandbuf);
 void EXEC_glGlobalAlphaFactordSUN(char *commandbuf);
 void EXEC_glGlobalAlphaFactorubSUN(char *commandbuf);
 void EXEC_glGlobalAlphaFactorusSUN(char *commandbuf);
 void EXEC_glGlobalAlphaFactoruiSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiSUN(char *commandbuf);
 void EXEC_glReplacementCodeusSUN(char *commandbuf);
 void EXEC_glReplacementCodeubSUN(char *commandbuf);
 void EXEC_glReplacementCodeuivSUN(char *commandbuf);
 void EXEC_glReplacementCodeusvSUN(char *commandbuf);
 void EXEC_glReplacementCodeubvSUN(char *commandbuf);
 void EXEC_glReplacementCodePointerSUN(char *commandbuf);
 void EXEC_glColor4ubVertex2fSUN(char *commandbuf);
 void EXEC_glColor4ubVertex2fvSUN(char *commandbuf);
 void EXEC_glColor4ubVertex3fSUN(char *commandbuf);
 void EXEC_glColor4ubVertex3fvSUN(char *commandbuf);
 void EXEC_glColor3fVertex3fSUN(char *commandbuf);
 void EXEC_glColor3fVertex3fvSUN(char *commandbuf);
 void EXEC_glNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glColor4fNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glColor4fNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glTexCoord2fVertex3fSUN(char *commandbuf);
 void EXEC_glTexCoord2fVertex3fvSUN(char *commandbuf);
 void EXEC_glTexCoord4fVertex4fSUN(char *commandbuf);
 void EXEC_glTexCoord4fVertex4fvSUN(char *commandbuf);
 void EXEC_glTexCoord2fColor4ubVertex3fSUN(char *commandbuf);
 void EXEC_glTexCoord2fColor4ubVertex3fvSUN(char *commandbuf);
 void EXEC_glTexCoord2fColor3fVertex3fSUN(char *commandbuf);
 void EXEC_glTexCoord2fColor3fVertex3fvSUN(char *commandbuf);
 void EXEC_glTexCoord2fNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glTexCoord2fNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glTexCoord2fColor4fNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glTexCoord2fColor4fNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glTexCoord4fColor4fNormal3fVertex4fSUN(char *commandbuf);
 void EXEC_glTexCoord4fColor4fNormal3fVertex4fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiVertex3fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiColor4ubVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiColor4ubVertex3fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiColor3fVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiColor3fVertex3fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiColor4fNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiTexCoord2fVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiTexCoord2fVertex3fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(char *commandbuf);
 void EXEC_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(char *commandbuf);
 void EXEC_glBlendFuncSeparateEXT(char *commandbuf);
 void EXEC_glVertexWeightfEXT(char *commandbuf);
 void EXEC_glVertexWeightfvEXT(char *commandbuf);
 void EXEC_glVertexWeightPointerEXT(char *commandbuf);
 void EXEC_glFlushVertexArrayRangeNV(char *commandbuf);
 void EXEC_glVertexArrayRangeNV(char *commandbuf);
 void EXEC_glCombinerParameterfvNV(char *commandbuf);
 void EXEC_glCombinerParameterfNV(char *commandbuf);
 void EXEC_glCombinerParameterivNV(char *commandbuf);
 void EXEC_glCombinerParameteriNV(char *commandbuf);
 void EXEC_glCombinerInputNV(char *commandbuf);
 void EXEC_glCombinerOutputNV(char *commandbuf);
 void EXEC_glFinalCombinerInputNV(char *commandbuf);
 void EXEC_glGetCombinerInputParameterfvNV(char *commandbuf);
 void EXEC_glGetCombinerInputParameterivNV(char *commandbuf);
 void EXEC_glGetCombinerOutputParameterfvNV(char *commandbuf);
 void EXEC_glGetCombinerOutputParameterivNV(char *commandbuf);
 void EXEC_glGetFinalCombinerInputParameterfvNV(char *commandbuf);
 void EXEC_glGetFinalCombinerInputParameterivNV(char *commandbuf);
 void EXEC_glResizeBuffersMESA(char *commandbuf);
 void EXEC_glWindowPos2dMESA(char *commandbuf);
 void EXEC_glWindowPos2dvMESA(char *commandbuf);
 void EXEC_glWindowPos2fMESA(char *commandbuf);
 void EXEC_glWindowPos2fvMESA(char *commandbuf);
 void EXEC_glWindowPos2iMESA(char *commandbuf);
 void EXEC_glWindowPos2ivMESA(char *commandbuf);
 void EXEC_glWindowPos2sMESA(char *commandbuf);
 void EXEC_glWindowPos2svMESA(char *commandbuf);
 void EXEC_glWindowPos3dMESA(char *commandbuf);
 void EXEC_glWindowPos3dvMESA(char *commandbuf);
 void EXEC_glWindowPos3fMESA(char *commandbuf);
 void EXEC_glWindowPos3fvMESA(char *commandbuf);
 void EXEC_glWindowPos3iMESA(char *commandbuf);
 void EXEC_glWindowPos3ivMESA(char *commandbuf);
 void EXEC_glWindowPos3sMESA(char *commandbuf);
 void EXEC_glWindowPos3svMESA(char *commandbuf);
 void EXEC_glWindowPos4dMESA(char *commandbuf);
 void EXEC_glWindowPos4dvMESA(char *commandbuf);
 void EXEC_glWindowPos4fMESA(char *commandbuf);
 void EXEC_glWindowPos4fvMESA(char *commandbuf);
 void EXEC_glWindowPos4iMESA(char *commandbuf);
 void EXEC_glWindowPos4ivMESA(char *commandbuf);
 void EXEC_glWindowPos4sMESA(char *commandbuf);
 void EXEC_glWindowPos4svMESA(char *commandbuf);
 void EXEC_glMultiModeDrawArraysIBM(char *commandbuf);
 void EXEC_glMultiModeDrawElementsIBM(char *commandbuf);
 void EXEC_glColorPointerListIBM(char *commandbuf);
 void EXEC_glSecondaryColorPointerListIBM(char *commandbuf);
 void EXEC_glEdgeFlagPointerListIBM(char *commandbuf);
 void EXEC_glFogCoordPointerListIBM(char *commandbuf);
 void EXEC_glIndexPointerListIBM(char *commandbuf);
 void EXEC_glNormalPointerListIBM(char *commandbuf);
 void EXEC_glTexCoordPointerListIBM(char *commandbuf);
 void EXEC_glVertexPointerListIBM(char *commandbuf);
 void EXEC_glTbufferMask3DFX(char *commandbuf);
 void EXEC_glSampleMaskEXT(char *commandbuf);
 void EXEC_glSamplePatternEXT(char *commandbuf);
 void EXEC_glTextureColorMaskSGIS(char *commandbuf);
 void EXEC_glDeleteFencesNV(char *commandbuf);
 void EXEC_glGenFencesNV(char *commandbuf);
 void EXEC_glIsFenceNV(char *commandbuf);
 void EXEC_glTestFenceNV(char *commandbuf);
 void EXEC_glGetFenceivNV(char *commandbuf);
 void EXEC_glFinishFenceNV(char *commandbuf);
 void EXEC_glSetFenceNV(char *commandbuf);
 void EXEC_glMapControlPointsNV(char *commandbuf);
 void EXEC_glMapParameterivNV(char *commandbuf);
 void EXEC_glMapParameterfvNV(char *commandbuf);
 void EXEC_glGetMapControlPointsNV(char *commandbuf);
 void EXEC_glGetMapParameterivNV(char *commandbuf);
 void EXEC_glGetMapParameterfvNV(char *commandbuf);
 void EXEC_glGetMapAttribParameterivNV(char *commandbuf);
 void EXEC_glGetMapAttribParameterfvNV(char *commandbuf);
 void EXEC_glEvalMapsNV(char *commandbuf);
 void EXEC_glCombinerStageParameterfvNV(char *commandbuf);
 void EXEC_glGetCombinerStageParameterfvNV(char *commandbuf);
 void EXEC_glAreProgramsResidentNV(char *commandbuf);
 void EXEC_glBindProgramNV(char *commandbuf);
 void EXEC_glDeleteProgramsNV(char *commandbuf);
 void EXEC_glExecuteProgramNV(char *commandbuf);
 void EXEC_glGenProgramsNV(char *commandbuf);
 void EXEC_glGetProgramParameterdvNV(char *commandbuf);
 void EXEC_glGetProgramParameterfvNV(char *commandbuf);
 void EXEC_glGetProgramivNV(char *commandbuf);
 void EXEC_glGetProgramStringNV(char *commandbuf);
 void EXEC_glGetTrackMatrixivNV(char *commandbuf);
 void EXEC_glGetVertexAttribdvNV(char *commandbuf);
 void EXEC_glGetVertexAttribfvNV(char *commandbuf);
 void EXEC_glGetVertexAttribivNV(char *commandbuf);
 void EXEC_glGetVertexAttribPointervNV(char *commandbuf);
 void EXEC_glIsProgramNV(char *commandbuf);
 void EXEC_glLoadProgramNV(char *commandbuf);
 void EXEC_glProgramParameter4dNV(char *commandbuf);
 void EXEC_glProgramParameter4dvNV(char *commandbuf);
 void EXEC_glProgramParameter4fNV(char *commandbuf);
 void EXEC_glProgramParameter4fvNV(char *commandbuf);
 void EXEC_glProgramParameters4dvNV(char *commandbuf);
 void EXEC_glProgramParameters4fvNV(char *commandbuf);
 void EXEC_glRequestResidentProgramsNV(char *commandbuf);
 void EXEC_glTrackMatrixNV(char *commandbuf);
 void EXEC_glVertexAttribPointerNV(char *commandbuf);
 void EXEC_glVertexAttrib1sNV(char *commandbuf);
 void EXEC_glVertexAttrib1svNV(char *commandbuf);
 void EXEC_glVertexAttrib2sNV(char *commandbuf);
 void EXEC_glVertexAttrib2svNV(char *commandbuf);
 void EXEC_glVertexAttrib3sNV(char *commandbuf);
 void EXEC_glVertexAttrib3svNV(char *commandbuf);
 void EXEC_glVertexAttrib4sNV(char *commandbuf);
 void EXEC_glVertexAttrib4svNV(char *commandbuf);
 void EXEC_glVertexAttrib1fNV(char *commandbuf);
 void EXEC_glVertexAttrib1fvNV(char *commandbuf);
 void EXEC_glVertexAttrib2fNV(char *commandbuf);
 void EXEC_glVertexAttrib2fvNV(char *commandbuf);
 void EXEC_glVertexAttrib3fNV(char *commandbuf);
 void EXEC_glVertexAttrib3fvNV(char *commandbuf);
 void EXEC_glVertexAttrib4fNV(char *commandbuf);
 void EXEC_glVertexAttrib4fvNV(char *commandbuf);
 void EXEC_glVertexAttrib1dNV(char *commandbuf);
 void EXEC_glVertexAttrib1dvNV(char *commandbuf);
 void EXEC_glVertexAttrib2dNV(char *commandbuf);
 void EXEC_glVertexAttrib2dvNV(char *commandbuf);
 void EXEC_glVertexAttrib3dNV(char *commandbuf);
 void EXEC_glVertexAttrib3dvNV(char *commandbuf);
 void EXEC_glVertexAttrib4dNV(char *commandbuf);
 void EXEC_glVertexAttrib4dvNV(char *commandbuf);
 void EXEC_glVertexAttrib4ubNV(char *commandbuf);
 void EXEC_glVertexAttrib4ubvNV(char *commandbuf);
 void EXEC_glVertexAttribs1svNV(char *commandbuf);
 void EXEC_glVertexAttribs2svNV(char *commandbuf);
 void EXEC_glVertexAttribs3svNV(char *commandbuf);
 void EXEC_glVertexAttribs4svNV(char *commandbuf);
 void EXEC_glVertexAttribs1fvNV(char *commandbuf);
 void EXEC_glVertexAttribs2fvNV(char *commandbuf);
 void EXEC_glVertexAttribs3fvNV(char *commandbuf);
 void EXEC_glVertexAttribs4fvNV(char *commandbuf);
 void EXEC_glVertexAttribs1dvNV(char *commandbuf);
 void EXEC_glVertexAttribs2dvNV(char *commandbuf);
 void EXEC_glVertexAttribs3dvNV(char *commandbuf);
 void EXEC_glVertexAttribs4dvNV(char *commandbuf);
 void EXEC_glVertexAttribs4ubvNV(char *commandbuf);
 void EXEC_glGenFragmentShadersATI(char *commandbuf);
 void EXEC_glBindFragmentShaderATI(char *commandbuf);
 void EXEC_glDeleteFragmentShaderATI(char *commandbuf);
 void EXEC_glBeginFragmentShaderATI(char *commandbuf);
 void EXEC_glEndFragmentShaderATI(char *commandbuf);
 void EXEC_glPassTexCoordATI(char *commandbuf);
 void EXEC_glSampleMapATI(char *commandbuf);
 void EXEC_glColorFragmentOp1ATI(char *commandbuf);
 void EXEC_glColorFragmentOp2ATI(char *commandbuf);
 void EXEC_glColorFragmentOp3ATI(char *commandbuf);
 void EXEC_glAlphaFragmentOp1ATI(char *commandbuf);
 void EXEC_glAlphaFragmentOp2ATI(char *commandbuf);
 void EXEC_glAlphaFragmentOp3ATI(char *commandbuf);
 void EXEC_glSetFragmentShaderConstantATI(char *commandbuf);
 void EXEC_glDrawMeshArraysSUN(char *commandbuf);
 void EXEC_glPointParameteriNV(char *commandbuf);
 void EXEC_glPointParameterivNV(char *commandbuf);
 void EXEC_glActiveStencilFaceEXT(char *commandbuf);
 void EXEC_glDrawBuffersATI(char *commandbuf);
 void EXEC_glProgramNamedParameter4fNV(char *commandbuf);
 void EXEC_glProgramNamedParameter4dNV(char *commandbuf);
 void EXEC_glProgramNamedParameter4fvNV(char *commandbuf);
 void EXEC_glProgramNamedParameter4dvNV(char *commandbuf);
 void EXEC_glGetProgramNamedParameterfvNV(char *commandbuf);
 void EXEC_glGetProgramNamedParameterdvNV(char *commandbuf);
 void EXEC_glDepthBoundsEXT(char *commandbuf);
 void EXEC_glBlendEquationSeparateEXT(char *commandbuf);
 void EXEC_glBlitFramebufferEXT(char *commandbuf);
 void EXEC_glBlendEquationSeparateATI(char *commandbuf);
 void EXEC_glStencilOpSeparateATI(char *commandbuf);
 void EXEC_glStencilFuncSeparateATI(char *commandbuf);
 void EXEC_glProgramEnvParameters4fvEXT(char *commandbuf);
 void EXEC_glProgramLocalParameters4fvEXT(char *commandbuf);
 void EXEC_glGetQueryObjecti64vEXT(char *commandbuf);
 void EXEC_glGetQueryObjectui64vEXT(char *commandbuf);
 void EXEC_glBlendFuncSeparateINGR(char *commandbuf);
 void EXEC_glCreateDebugObjectMESA(char *commandbuf);
 void EXEC_glClearDebugLogMESA(char *commandbuf);
 void EXEC_glGetDebugLogMESA(char *commandbuf);
 void EXEC_glGetDebugLogLengthMESA(char *commandbuf);
 void EXEC_glPointParameterfSGIS(char *commandbuf);
 void EXEC_glPointParameterfvSGIS(char *commandbuf);
 void EXEC_glIglooInterfaceSGIX(char *commandbuf);
 void EXEC_glDeformationMap3dSGIX(char *commandbuf);
 void EXEC_glDeformationMap3fSGIX(char *commandbuf);
 void EXEC_glDeformSGIX(char *commandbuf);
 void EXEC_glLoadIdentityDeformationMapSGIX(char *commandbuf);
 void EXEC_glGetStringi(char *commandbuf);
